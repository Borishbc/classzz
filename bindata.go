// Code generated by go-bindata.
// sources:
// sample-classzz.conf
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _sampleClasszzConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x5b\x6d\x6f\x1b\x39\x92\xfe\x1e\xc0\xff\xa1\xb0\xd8\x85\x9d\x85\x2c\x4b\xb6\xe3\xcc\x68\x46\x01\x1c\x3b\xbb\xeb\xdb\xc4\xf6\xc5\xc9\xec\xed\x0d\x06\x03\xaa\xbb\xa4\xe6\x9a\x4d\xf6\x90\x6c\xc9\xca\x61\xe7\xb7\x1f\xaa\x48\xf6\x8b\x64\x27\x9e\xb9\xf8\xf2\x21\x96\xba\xc9\x62\xb1\x5e\x9f\x2a\x52\x3f\x9e\x56\x95\x92\x99\xf0\xd2\x68\xb8\xaa\xe8\x8f\xfb\x69\xe7\xd9\xce\xb3\xef\x60\xff\xab\xfe\x23\x8a\xe7\xc2\x0b\x70\xe8\xbd\xd4\x0b\xf7\x14\x4b\x10\xcd\x0f\x05\x42\x2e\x2d\x66\xde\xd8\x35\x78\x03\xce\x1b\x8b\x90\xf3\xda\x75\x56\x80\x70\xe0\x0b\x84\x99\x32\xd9\x2d\x64\x85\x90\x1a\x84\xce\xa1\x42\xb4\x20\xf2\xdc\xa2\x73\xe8\x86\x40\x84\x88\x5e\x77\x9c\x17\xb7\xe8\xc0\xe1\x12\xad\x50\xf0\xd7\xd7\x03\x70\x06\x7c\x21\x1d\x28\x13\x65\x58\xd6\xce\x43\x21\x96\x08\x02\x94\xf1\x60\xe6\x30\xb7\x88\xe0\x2a\x91\xe1\xb0\x61\x10\xe7\xa2\x56\x1e\xa4\x83\x5f\x0f\x86\x99\x12\xce\x7d\xfa\x74\xc0\x3c\x1a\x0d\xd7\x57\x37\x17\xff\x05\x57\x37\xe8\x06\xf0\xc7\xb7\x57\x67\xa7\x6f\x4f\xaf\xaf\xcf\x4f\x3f\x9c\x1e\x9c\x6d\x8c\xfc\x87\xd4\xb9\x59\xb9\x01\xd1\xfd\xf5\xe0\xad\x9c\x59\x61\xd7\x07\x5d\x9d\xde\xd4\x55\x65\xac\xdf\x9a\xf9\x4e\x64\x70\x75\x33\xe0\xad\xff\xb1\x30\x25\x1e\x6c\x70\x41\x24\xaf\x95\xd0\xdf\x0e\x01\xde\xe8\xa5\xb4\x46\x97\xa8\x3d\x2c\x85\x95\x62\xa6\xd0\x81\xb0\x08\x78\x57\x09\x9d\x63\x1e\x04\x81\x6b\x28\xc5\x1a\x66\x08\xb5\xc3\x7c\x08\x70\x79\xf5\xe1\xcd\x24\x71\x49\x14\xf1\x41\x4a\x7e\x5d\xc9\x4c\x28\xb5\x86\x3f\xfd\x70\xfa\xfe\xe2\xf4\xf5\xdb\x37\x7f\x1a\xc0\xac\xf6\x91\x2e\xc9\x75\x86\x20\xb2\x8c\x14\x94\xc3\x4a\xfa\x82\x28\xfe\x31\x8d\x86\x02\x2d\x0e\x01\x4e\x95\x33\x03\xf8\x95\x64\xdb\x70\xe7\x4d\x5f\x90\x1d\xd9\x0d\x77\x9e\xd1\x8e\x73\x69\xa7\xf4\x97\x8c\xe8\x69\xac\xff\x12\xfd\xca\xd8\xdb\x27\x77\x80\x8f\x0e\xc1\xa3\xf3\x1a\x3d\xdb\x5b\xfc\x3c\x1d\x87\xd7\x67\x46\x6b\xcc\x3c\x2c\xa5\x00\x01\x37\x57\x67\x7f\xbf\x79\x01\x95\x35\x77\xeb\x46\x5f\x37\x15\x66\x72\xbe\x96\x7a\x01\x22\xbc\x82\x95\x54\x0a\x72\xe9\x48\x5f\xa0\xa4\xf3\xa8\xa5\x5e\x10\xbd\xb9\xb1\x20\x75\x66\x4a\x1a\x9e\x05\xe2\x14\x45\xa0\xd6\x0a\x9d\x8b\x83\x5b\xcf\x62\x65\x57\xd6\x2c\x25\x29\x86\xb8\x20\x6f\xdc\x0d\xc3\x76\x89\xa2\xe1\x30\xc4\xbc\xf3\xe2\xd3\xf1\xe1\xcb\xe1\x68\x38\x1a\x8e\x27\xdf\x8e\x5e\x8c\x9a\xe7\xb5\x43\x3b\x6d\xbe\x55\xc2\xb9\x69\x1b\x02\xba\x1b\x03\x31\x33\x4b\x24\x83\x10\xce\xd5\x65\xb0\x87\x19\xc2\x07\x63\x61\xaf\xf0\xbe\x72\x93\x83\x83\xd5\x6a\x35\xf4\xc6\x56\xd6\xfc\x0b\x33\x3f\x34\x76\xf1\x9c\x59\xb8\x98\x33\x83\x81\x90\x74\xa0\x8d\x07\x6f\x2c\x3f\x9c\x1b\xa5\xcc\x8a\x36\xde\x31\x7b\x22\x5e\x59\x5c\x92\x89\xd7\x8e\x5e\x7a\x63\x89\x92\x63\xb1\xca\x2c\xf0\x06\xbf\xd4\x68\x25\x3a\x1a\xae\x8c\xb9\xad\xab\x8e\x8c\xf6\x38\xa8\x48\x9d\x59\x14\x2c\x33\x6d\xf4\xba\x94\x7e\x0d\xab\x02\x75\x22\x28\x5d\x58\x70\xb6\x4e\x0b\xd2\x6a\x6b\x53\x5b\xb8\xb8\x86\x19\xd2\x37\x85\xe2\x36\xca\xf9\xfc\xf2\x26\x6c\x49\x1b\xa3\xa5\xd1\xc9\x22\xc8\x60\x84\x06\xa1\x3c\x5a\x2d\xbc\x5c\xa6\xdd\x7a\x93\x14\x4a\x1f\x87\x3c\xa9\x1b\x22\x3f\x74\xe5\x12\x45\xcb\x16\xc7\xd2\x15\x2c\x5f\x6d\x72\x1c\xc2\xa5\xd1\x5b\xf3\x83\x4d\xcd\x90\xd6\xf0\x22\xf3\xd1\xa7\x59\xb0\x25\x45\x5b\x26\xcd\x06\x61\xf9\x8d\xa9\x7d\x63\x8f\x72\x0e\xda\x68\xd6\xa9\x8b\x76\x1e\xf7\xd4\xb5\x95\x71\xf3\xbc\xb1\x15\xfe\xd6\xb1\x95\x37\x9a\x4d\x9a\x58\x75\xde\xa2\x28\x41\x3a\xa3\x42\xec\x9c\xad\xc1\x0a\x9d\x9b\x52\x7e\x22\x51\x86\x95\x89\x12\x64\x16\x73\x12\xb7\x50\x0e\x2c\xba\x5a\xb1\xe4\x25\x07\x4d\x22\x45\x7a\xf3\xc1\x7f\x34\xae\x20\x93\x36\xab\xa5\x67\x5f\x41\x91\x15\x1d\x3f\xe1\x44\x23\x1d\x94\x9c\x5a\xa4\x87\x92\xb3\x95\x9c\xcf\x65\x56\x2b\x1f\xc5\x99\x19\x6b\x51\x09\x8f\x5d\x0f\x0b\xde\x6d\x6c\xc3\x70\x57\xa1\x1f\xb5\x5c\xa2\x75\x42\xc1\xb5\xaa\x17\x1c\xe6\xaf\x95\x58\xc3\xde\xc7\x6b\x7d\xfd\x9c\x68\x8a\xda\x9b\x52\xf8\x18\x74\x4d\x45\x76\x55\x24\xe7\x06\x4a\x1a\x44\x8b\x26\x9a\x99\xe7\xec\x57\x50\xbc\x67\x23\x51\x64\x60\x51\x93\x30\xb7\xa6\x04\x17\xf2\x0c\xe6\x90\xe3\x52\x66\x9c\x41\x43\x34\xe1\xed\x05\x9f\x26\x82\xac\x75\x4e\x90\xda\x00\xce\xe7\x64\x5d\x72\x0e\x78\xb7\x49\x37\x86\x8a\xe8\x35\x98\xf3\x76\xeb\x4a\x57\x69\x9b\x31\x4c\x3d\xc4\x17\xba\xe0\x0a\x64\x81\x64\x27\x4d\xd4\x02\x96\xfa\x95\xc6\x66\x07\x15\xb2\x3f\x29\xa9\x29\x81\xc4\x44\x18\x38\x25\x77\x8f\x06\x0a\x47\x36\xdf\xaf\x84\xf5\x6b\x70\xd2\x07\xcf\x8d\xa2\x69\x96\x97\x1d\x2f\x8e\xd9\x9e\x94\x8b\x42\x3b\xda\xe5\xda\xd4\xbc\xa9\x19\x16\x52\xe7\x70\x79\xfa\x61\xd0\x61\xb2\x59\x90\xbc\x87\xac\x92\xb4\x94\x2f\xd1\x7a\x49\x2e\x4a\xe4\x2c\x99\x0f\xbf\x4b\xbc\xc7\x30\x4b\x94\x5d\x14\x88\xf4\x9c\x0b\xc9\x6f\x30\x98\x37\x87\x58\x92\xdd\x6e\xd4\x04\xec\x09\xcd\xbe\x1a\xa1\xca\xa6\xfa\x42\xa0\x48\xdb\x92\xd5\x74\x3c\x3c\x1c\x1e\x0d\x8f\x37\x9e\x1e\x8e\x46\x87\x93\xc9\xf8\xf0\xe8\x38\xa8\xe4\xcf\x5f\xf5\x1f\x2b\xb9\x2e\x4b\x61\xd7\x84\xa3\x76\x45\x9e\x13\x4a\xdb\x05\xb2\xec\xda\xc1\x6e\x74\x86\x5d\x62\x96\x06\x5f\x69\xb2\x64\x8d\x34\xba\x1f\x9f\xfd\xca\xc4\x9d\xbb\x41\x87\x10\x59\x77\x43\x65\x10\xa3\x78\x27\x56\x33\x88\x79\x6d\x7c\x01\x82\x28\xb1\x94\x09\x52\x46\x41\x13\x11\x42\x93\xc2\xf3\x9b\x95\xd0\x3e\x20\x4e\xb1\x4e\x8e\x1a\x22\x22\x85\xaf\x06\xcc\x90\xf6\xc5\x52\x52\xde\x74\xe0\x94\x5c\x14\x5e\xad\xd9\xe5\xd1\xa2\xf6\xb4\xe2\x3a\x21\xc4\x41\xdf\x1a\x29\x67\xac\x29\x90\xc7\xb8\x30\x97\x11\xb9\xba\x7e\xb0\x66\x60\xda\xb1\x8c\xa4\xe5\x94\x81\x28\xad\x18\x9d\xf0\x30\x13\x2b\x8c\x23\x5c\xea\x32\x2b\x67\x94\x53\x50\x99\x15\x1b\x27\xc5\xbd\x99\x98\xa9\x35\xac\x8c\xde\xf5\xa0\x31\xe4\xb8\xd2\xe4\x24\x03\xa1\xd7\xbe\x20\x11\x33\xfc\x8a\x8a\x68\x25\x9c\x1b\x0c\x39\x33\xa5\xc4\x2e\x44\x20\x07\xf2\x05\xda\xb8\x85\x5c\xba\xcc\x2c\xd1\x62\xce\x31\x25\xb0\x85\xf1\x65\x72\x9d\x46\xae\xec\x1d\x3a\x07\xa1\x9c\x01\x85\x3e\xc0\x7a\x8b\xa5\xf1\x69\xce\xad\x8e\x3a\x13\x96\xb5\x2a\x96\x42\x2a\x76\x88\x04\x57\x33\xa1\x89\x3b\xda\x48\x97\x93\xe6\x5d\x3f\x05\xae\x4d\x1d\xe3\x75\x8b\x53\xa0\x24\x05\xc6\xe4\x3f\xaf\x55\xd7\xcd\x49\xcd\x21\x71\xcc\x14\x96\x8e\xd5\x15\xb3\x02\xf9\x3b\xa5\x03\x67\x4a\x8c\x8e\x4d\x1a\xd9\xab\xd0\x16\xa2\x72\x90\xd7\xc1\xfd\x61\x2e\x2d\xae\x84\x52\xcf\x1b\xd9\xb6\xf6\x6a\x42\x50\x0e\x9c\x17\x42\xe7\x83\x60\x26\x57\x97\x6f\xff\xd9\xe5\x9b\x06\x35\x16\x1d\xb7\x18\xfd\x5f\x47\x15\x50\xbc\xbe\xf0\x41\x98\x11\xe7\x75\x43\xe6\x5e\xc7\x98\xf0\x8e\xca\x0b\x49\x46\xeb\xd0\xc7\x41\x2c\xde\x26\xf0\x6e\xc2\xba\x28\xab\xe7\xac\xb0\xf3\xcb\x1b\x70\x88\x24\x09\xb6\x53\x76\x9d\x36\xf4\x05\x4a\x31\xea\xe5\x54\xae\x11\x38\x69\x34\xc7\x75\x5a\xdc\x53\x6b\x19\x9d\xcd\xd2\x12\xc1\x52\xa9\x56\xa8\x38\x8b\x75\x8d\x8e\xd3\x95\xd0\x3d\x85\x0f\x01\x6e\xcc\x20\xb0\x9c\xc4\x9b\xf4\x1b\x72\x94\x5c\xa2\x5a\x87\x28\xc0\xca\x8f\x91\xc0\x50\xc4\xe9\x2c\xfe\x07\x6f\x6b\xe7\x31\xff\x43\xa4\xfb\x14\x41\x91\x68\x9e\xe6\xa4\x47\xeb\x58\xbc\xfe\xbe\x10\x40\x82\xcb\xd1\x49\xcb\x31\x8c\xb2\x1d\x4b\xae\x42\x1b\xf2\x1c\x51\xf9\xa7\xa9\x39\xe6\xa5\x78\xc6\xd8\xa4\x93\xd9\x19\x8f\xf5\xd1\x97\xb1\x3e\xd4\xc6\x4d\x0d\x4b\x8f\x58\x7f\x5c\x2d\x73\x62\x22\xb5\xf5\xd0\x85\x9c\x43\x44\x6b\xa4\xe3\xd6\x14\x53\xcc\x80\x18\x2f\xa6\xe3\x6f\x0f\x87\xe3\x93\x6f\x86\xe3\xe1\xb8\xf7\x78\xc4\xa0\xee\x70\xf2\xcd\xd1\xd1\x51\xf7\xc5\x1c\xbf\x19\x4d\x26\xbd\xb1\x3f\x86\x67\x87\x3f\xc5\xc1\x0f\x8b\x2b\xc5\x6d\x76\x97\x14\xbc\xbf\x24\x41\x2e\x38\x92\x10\xe1\xff\x24\x42\x22\xb5\x25\xc5\xdf\x2d\xc2\xad\xda\xcd\xb7\xc0\x0b\x0a\xe1\xa2\xbd\x3b\x99\x63\xb4\x69\x17\x77\x18\x43\x7e\xac\x92\x74\x8a\xbb\x0f\xe7\x5b\x70\x31\x2b\xbb\x08\x62\x3b\x3e\xb6\xa9\xc2\xe6\xf1\xa6\x0a\xd3\x8b\x8e\x0a\xd3\xa3\xfb\x54\xf8\x4e\xdc\xc9\xb2\x2e\x41\xd7\xe5\x0c\x2d\x65\x78\xa9\x67\xa6\xa6\x04\x40\x10\xb5\xf6\xe1\x4b\xeb\x76\xa5\xb8\xe3\x2f\xd3\xf1\xe1\x8b\x40\xe2\x3c\xd6\xaf\x33\xa1\x03\x0e\x9c\x43\x29\x5d\xc8\xc6\x14\xa6\x9b\xa9\xda\xc4\x21\x09\x6a\xa6\xc5\xd9\xff\x29\x3b\x0a\x0d\x2e\x33\x8c\xe4\xe6\x01\xb0\xbb\x14\x63\x74\x40\xdb\x69\x91\xfb\x57\x98\x09\xed\x0b\x8b\xae\x30\x2a\x9f\x8e\x47\xa3\xb0\xcc\xdf\xcc\x0a\x94\xe1\x8a\x91\x97\xd8\x9e\x0b\x3f\x08\x25\x73\xf0\xb2\x44\xa8\xb5\xf4\x01\x23\xff\x8f\x1b\x40\x39\x80\xe2\xdf\x4c\xfb\x9d\xd4\xcc\xec\xb8\x59\x2a\xaf\x6d\x28\x10\x0e\x8f\x8b\xcd\x47\xe3\x71\x71\x34\x2a\xc7\x2f\x5c\xeb\x29\xab\x42\x7a\xe4\xc8\x9d\x93\x29\xeb\xd0\xb8\xe0\x94\x01\x17\xd7\x6e\x98\x7a\x08\x4d\x2e\x59\x31\x78\xb8\xb8\x86\x52\xf8\xac\x20\xe0\xce\xa0\x27\x91\x69\xa3\x3b\xe3\x10\x5f\xa0\xb4\x1d\x11\xa6\x32\x97\x10\x7e\x33\x67\x1a\xcc\x65\xd4\x23\x34\x8d\x76\xd2\x3e\x48\xc6\x36\x1a\x8e\x0e\x0e\x8f\xfb\xef\xe6\xf9\x68\x34\x99\x1c\x8c\x4f\xfa\xda\xef\xa4\x1f\xce\xc0\x29\x01\x74\x41\x17\x57\xd9\x09\x79\x39\x2f\xac\x77\x03\x82\xd5\xbc\x91\xda\xb1\xe7\x12\x1d\x6f\x22\x24\x23\x42\xfd\x1c\xd5\x0b\xc7\xe4\xfd\xd1\xb2\x72\xed\x68\xf5\xfb\x8a\x18\xa9\x3d\xda\xb9\xc8\x62\x53\x20\x14\x62\x4d\xb1\xd2\x6f\xa4\xf4\x03\x79\xaa\xb4\x36\xa2\x32\x95\x1e\x84\xd2\x64\x68\x12\x10\xd6\x48\x28\xb8\xe9\x85\xee\xc6\xfe\xd0\x2e\xe7\x62\x49\x93\x02\x1e\xc9\x4c\x59\x62\xea\x9e\xb5\x31\x67\x1d\x43\x58\xc4\x5e\x84\x8a\xb9\x28\x27\x7e\xd2\xe2\xa1\x01\x90\x91\x55\x70\x34\xf9\x32\x12\xf5\x06\xf2\x88\x44\x56\xd2\x85\x4d\x9d\x2a\xd5\x15\x89\xd1\xfd\xcd\xc5\x1e\x49\x80\x7d\xf1\xcd\xf3\x09\x4d\x8c\xa2\x9a\x36\x44\xaa\xe5\xf1\x67\x28\x4d\x76\x9e\xc5\x09\x1d\x9b\x8b\xf3\x4e\x3e\x3f\xef\x3b\x68\x16\x9b\x4c\xee\xe7\x99\x79\xa5\x30\xb6\x31\x3c\x85\xc1\x07\x18\x7c\x60\x5a\xe4\x70\x73\xf6\x26\x9b\x0f\xcc\xfe\x71\x32\xf9\xa9\x99\xca\xc5\x12\xaf\xac\x4c\x26\x54\x61\x9c\xff\xcc\xd4\xb6\xaf\xb2\x39\xff\xe4\x51\xf3\x7f\x9c\x4c\xc6\x5f\x5c\x5b\x1b\xbd\xef\xbc\xd0\xb9\xb0\x79\x43\xe8\xe4\x33\x8c\x9c\xdc\x2f\xf3\xc7\xd0\xe9\x4f\xdf\x56\xc0\x63\x68\x74\xb4\x71\xf2\x19\x6d\x3c\x86\x54\x52\xcd\x46\xb0\x6a\x11\xf8\x43\x7d\xd6\xd4\x40\xe2\xd0\x44\xd5\x93\xa5\x04\x2f\x94\x8a\x73\x43\xc6\xd1\x26\x89\xaf\x4f\x9f\x31\xe1\x4c\x19\x53\xc2\x5c\x2a\x8f\x56\xea\x05\x81\x61\x44\x78\x7d\x71\x3d\x1a\x8f\xc7\x31\x6c\xd1\x40\x1e\x17\x86\xb9\x44\x88\xf2\x85\xc8\x73\x49\xbc\x08\x05\x59\x81\xd9\x6d\x65\xa4\xf6\x6e\x08\x7f\x31\xb6\x14\x7e\x02\xbb\xdf\x17\x48\x45\xd2\xab\xc9\xf7\x85\x70\xc5\xab\xdd\x08\xd7\xda\xc1\xd3\x8d\x11\x2d\xed\x10\x85\xbc\x4b\x90\x9f\xdb\x6f\x62\x41\x28\x8e\xf1\x9b\x74\xdd\x62\xc1\x9b\x4e\x8e\x7d\x57\x3b\xcf\x81\x4b\xea\x4c\xd5\x39\x05\x24\x61\x45\x46\xdc\xc3\xee\xc1\xee\x00\x76\x27\xf4\xdf\x5e\x6c\x03\x3c\xdf\x0d\x1d\x26\x11\x97\x9c\xf6\x25\x45\x4f\xa5\x4f\x39\xaf\x95\x16\xec\x9d\xfd\x25\xb5\x55\xb3\x0d\xe1\x7c\xed\xf6\xfe\x77\xf0\xfe\xfa\x0c\x1c\xda\x25\x21\xa0\x18\xc8\xf7\x39\xee\xb7\xad\x8e\xf4\x3c\x33\xda\x5b\xa3\x42\xc7\xa1\x96\xca\xef\x4b\xdd\x99\x1f\x73\x65\x56\x34\x6d\xe4\x90\xaf\x78\x0e\x09\x24\x24\x36\xa9\xe7\xac\x45\x02\x91\xa1\x72\x02\x5b\x07\x64\x93\xf2\x63\x65\x4d\x86\xce\xa5\xfa\xb4\xcd\x45\x1d\x66\xa5\x4b\x55\x25\x67\xa2\xe6\xfc\x6b\x0e\xb6\xca\x58\xa7\xa7\x97\xe7\xf4\xb9\x12\xce\x0d\x20\xf4\xb7\x6d\x95\x29\x59\x4a\xdf\x7d\xcf\x0f\xc2\x20\x42\x3e\x3d\x2c\x3c\x7c\x0a\x99\x73\x92\xc6\xac\xb6\xa1\x8b\x46\x7b\x3a\xbd\xbe\xe0\x74\xda\x85\xda\xc1\x32\xb5\x28\x31\x9c\x26\x0a\xe7\x56\xc6\xe6\xb1\x42\xc8\xb8\xbf\xee\x4c\xdb\x5a\xa2\x34\xca\x7b\xc1\xfc\xb3\x33\xf9\xdc\xab\x99\xe2\x41\xa1\xe0\x58\xc9\x10\x64\x5e\x2b\xc5\x35\xb8\x99\xf7\x5a\xd2\xfb\x0d\x69\x82\x25\x79\x29\x35\xec\x43\x3c\xb3\xe8\x28\xa5\x53\xb4\x25\xe5\x0c\x77\x9e\x45\x85\x4c\xad\x31\x9e\xbf\x71\xb7\x9c\xa9\x6c\x2a\x65\xba\x2a\x84\xc7\x25\xda\x9f\xe3\x7a\x3f\xa7\xad\xfc\xbc\x36\xf5\xcf\x54\x52\x75\xa7\x34\x6d\xf7\xcf\x42\x9f\xf9\x36\xa3\x5f\x86\x42\x9d\xf6\xed\x57\xc1\x42\xac\xa8\x08\x87\xbe\x02\x16\xe2\xe2\x86\xe1\xd0\xef\xc0\x42\x7d\x68\xea\x43\xdd\xb8\xa1\xc6\xd0\x88\x68\xe4\xd4\x49\xab\x24\xce\x8b\xeb\xe5\x71\x44\xef\xcb\x93\x47\x60\xab\x98\x9a\x58\x6f\xbf\x11\x49\xb5\x73\x7e\x17\x98\x6a\xa7\x7f\x09\x4f\x1d\x6f\xcf\xa0\xa7\x8f\x80\x54\xdb\x33\x3b\x79\xfc\xf8\x11\xa8\x6a\x9b\x40\xca\xde\xc7\x8f\x00\x56\xdb\xb3\x7b\x90\xe6\xf8\x11\xd8\xea\x5e\x06\xc6\x5f\xe4\xe0\x5e\x1c\xf2\xf2\xf3\xec\xbc\xfc\x0d\x08\x6b\x9b\x54\x9f\xc2\x23\x41\xd6\x36\x99\x8e\x7e\x5e\xfe\x56\x9c\xb5\x4d\x2d\x29\xeb\xe5\x76\x18\x2a\xb7\x9a\x0c\x99\xd1\x59\x6d\x2d\xe1\x0d\x72\xb9\x4c\x49\x46\x23\xdc\xba\x4d\x4b\x6d\x9e\xc9\xd9\x2a\x2b\xc5\x5d\x1c\x3a\x1d\x8f\x7e\xc7\x3a\x2b\x9c\x39\x93\xdd\xa2\x4f\x2b\x76\x08\x37\xef\xdc\x34\x75\x36\xde\x49\x6b\x63\x33\x19\xfe\xe3\xe6\xea\x72\x9f\x68\xfc\x52\x4b\xaa\xda\xcd\x1c\x5e\x4b\x9f\x19\xa9\xe1\x8c\xca\xed\xfd\xfd\x18\x22\xcf\xa5\xcb\x4c\x6d\xc5\x82\x52\x10\x47\x25\x22\xc5\x22\xa5\x08\x26\x66\x52\x49\xbf\x06\xe9\x5c\x8d\xae\x69\xfb\xcf\x10\x56\xc6\xde\x62\x0e\xc2\x9a\x3a\x34\x91\x6d\x95\x85\xc5\xba\x27\x90\xfd\x03\x98\x78\xeb\x81\x83\x5b\x44\x54\x1b\x41\x1e\x97\xa8\x09\x10\x70\x17\x3f\x82\x02\xd1\xd0\xa7\xdc\xd1\x3f\x0f\x0c\xfd\xaa\x04\x7f\x43\x67\x96\x5b\x64\x5c\x94\xcb\xec\x96\x0f\x55\x7a\x4b\x71\x54\x4f\x41\x33\xf4\xe3\x62\x77\xc5\x1b\x3e\x39\x58\x62\x2f\x8f\x32\xe0\xa1\xb9\x99\xd1\x73\xb9\x20\xd0\x87\x11\xea\xd9\x2a\xfb\x4d\x9b\xfd\xf0\xf6\xe6\x9e\xcc\xd6\x3b\x24\xdd\x69\xcf\x14\x38\x9a\x87\xa6\x4b\x94\x48\x1f\x4b\x85\x5e\x17\xdf\x1c\x48\xfe\xdd\x71\x85\xbd\x84\xeb\x52\x27\x2f\x55\xc7\x91\x77\xaf\xa2\xa2\x9e\x06\xa3\xbe\xc3\xb2\x32\x46\xc1\x4d\xbc\xe8\xf2\x10\x42\x7d\x3a\xb4\x16\x8e\xd9\xca\xd8\x07\xf3\x56\x68\x27\xb2\x00\x61\x11\x53\x77\xc2\x68\x27\x73\x3e\x6c\x12\x1c\x39\x3e\xa1\x35\xf4\x9e\x73\x7f\x29\xb5\x45\x25\xd6\xfe\x6e\x8e\x48\xf1\x67\x34\x1a\x45\x75\xbf\x17\x1e\xf7\x19\xcf\x84\x9b\x5d\x1d\xf2\x4d\x95\xb2\x14\xaa\x46\x18\xbf\x80\x3f\xc3\x78\x34\x1a\xc1\x6c\xed\xb1\xc1\x29\xa5\xd4\xb5\x0f\x76\xc4\x64\x88\x0a\x2f\x36\x1d\x47\x77\x7e\x8f\xe4\x4e\x08\x85\x5c\x14\x50\x59\x69\x2c\x39\x22\x99\x0f\x8f\xe3\x72\x90\x96\x36\x16\x94\x59\xed\xcf\x37\xb8\x48\x26\x4a\x63\xd3\xec\x69\x8c\x42\x6f\x99\x71\x63\xab\x42\xe8\x9e\x64\x58\x65\xde\x10\xbf\xdb\xc4\x4a\x71\x17\xa6\xf8\xbb\xb6\x5b\x79\x1e\xa0\x50\x38\x65\xe9\x8b\x81\x1d\xa7\x7b\x14\x17\x3a\x91\xca\x64\xb7\x8e\x6c\x3b\xb9\xce\x7b\x62\xb1\x1f\xb7\x7b\x74\x2c\x2e\x84\xcd\x19\x30\x99\x79\x83\x17\xf4\xc6\x4d\xaa\x10\x1b\x89\x94\x36\xda\xf9\xbc\xa5\xfe\x2f\xcc\xfc\xd7\x22\x4f\xb4\xba\xf4\x9f\xc6\x79\xc2\x1d\x4c\xa1\xe0\x42\xe7\x78\x87\x4f\xe6\x24\xaf\x6b\xa9\x42\xeb\xbc\x14\x52\xf3\x25\x06\x11\xea\x09\x2a\xc0\xf7\x67\x82\x2b\xc2\x8e\x7d\x48\xe2\x27\x56\x8c\xe1\xb2\x8a\x08\xd5\x43\x4f\xa2\x6d\x0f\x34\x1d\x01\x2e\xd0\x5b\xb1\xea\x52\x7a\x7f\x7d\x16\xae\xae\xdc\x31\xcd\xa4\xad\x87\x39\x8a\x38\xff\x51\x4c\x45\x78\xec\x50\xd8\xac\xe8\x2f\xec\x38\x88\x36\x1c\xa6\x73\x27\xdb\xe3\xe2\x1c\x15\xfa\x10\xcf\x29\x0b\xd8\xf6\xa2\x45\x58\xcb\xe8\xd0\x0f\x86\xba\x62\x2c\xae\x01\xef\x64\xb8\x80\x94\x5b\x53\xb5\xf4\x46\x4f\x67\x23\x37\x72\xa1\x85\xa7\x8a\xf4\x07\xb4\x54\x39\x84\xf2\xfc\x4c\x64\x61\xf3\x5f\x7b\xc5\x36\x6e\xf0\x41\x72\xb3\x7a\x46\x0b\x86\x53\xea\x52\xdc\x91\x0b\xbd\xa0\x38\x49\x82\xb3\x32\xde\x7f\x71\x72\xc1\xc3\x4a\x71\xe7\xe4\x27\x9c\xf2\x88\xa7\x13\xcd\x19\xc1\x9c\xbf\xa2\xc6\x70\xba\x01\x7b\xef\xa4\x96\x7a\xf1\xfc\x8b\xc9\xa8\xdb\x2e\x21\x42\x8b\x96\x86\x99\xc7\x4b\xc0\x1e\xcb\x4a\x09\x8a\xe4\xe9\xda\x5d\x73\xef\xa7\xe4\x65\x40\xb4\x37\x6f\xc9\x14\xad\xa9\x17\x45\x02\x1e\x99\x50\x8a\x4f\xdc\x56\x48\x36\xed\xfa\x8d\x99\xb3\xeb\x8f\x44\x04\x2d\xec\xc9\x79\xbc\xb6\x93\x3f\x7f\xb2\x8e\x46\xbc\xf6\xb6\xb9\xbc\xd4\x8b\xcd\x36\x4e\xec\xb1\x37\xb7\x73\x19\x9a\xc4\xab\x0e\x0c\x68\xd0\x31\xd6\xa9\x6a\x5b\x19\x87\x6d\x31\x1d\x6b\xe9\xd8\xcb\x71\xb2\xa4\x2f\x4e\xea\x2c\x78\x57\x73\xc5\x8d\x48\xb2\xcb\xd3\x7b\xe9\x60\x2e\x2c\x78\x63\x42\xf2\xa3\x15\x5a\xde\xda\x62\x7a\x65\xac\x2f\xc2\xd5\xa9\x55\x91\x50\x59\xd4\x19\x4e\xbd\xad\xb1\xd7\x9e\x8c\xd7\x12\xbc\x81\x4a\xac\x59\xce\x79\xcc\x46\x7c\x8b\xa6\xbf\x08\x77\x61\x8c\x0f\x20\x90\x0a\x29\x9d\x8c\x62\xd3\x0c\xd2\x82\x79\x03\xed\x16\xe8\x79\x50\x1a\xc3\xc1\x6e\xeb\xb2\x59\x3a\xb8\x09\x0b\xd2\x8b\xe9\xd1\xbb\x97\xaf\xff\xfe\xe6\xe5\xf2\x9b\x7f\x88\x93\xb3\x5f\x8e\xea\xec\xf2\xdb\xff\xfc\xef\x4b\x21\xab\xb7\xef\xef\x16\xf5\x37\xb3\xf5\xc7\x08\x1d\xd2\x84\x31\x6d\x7e\x16\x80\x7d\x24\x7d\xf8\xe5\x21\x47\xf7\xd4\x22\x11\x26\x85\xcd\x91\x93\xd2\x8e\x03\x62\xf1\x26\x5c\x65\xdc\x6c\x42\x90\x11\x6c\xc5\xfe\x10\x86\xb9\xa9\x81\x9a\x2d\x7f\x8e\x54\x98\x59\x10\x41\x99\xf1\x69\x03\x68\xd2\x71\x77\xec\xcf\xe6\xa1\xfc\xe8\x48\x75\x43\xde\x43\xe8\x5f\x4d\xbe\x87\x73\x26\x29\xb5\xf3\x28\x98\x9c\xf0\x34\xdb\x87\xbb\x52\x4a\x3d\x4c\x1b\xea\x2a\x5e\x3f\xed\x6e\xa9\xd6\x5e\xaa\xd8\x05\x12\xdc\xcb\x0a\xfd\xb7\xfe\x85\x9a\xb6\x8a\x63\xa9\xb5\x58\xa7\x94\x9a\x83\xde\x67\x2a\xc0\x2f\x49\x9d\x1d\x30\xc0\xc9\x24\xae\xd8\x6b\xdb\x09\x57\xc0\x62\x79\xe2\x50\xbb\xda\x85\x77\x54\x33\x04\x9e\x95\xb0\x0b\x24\xcb\x24\xb0\x57\x08\x1f\x28\x75\x18\x8c\x51\xf9\x65\x13\x96\xfb\x5c\xf6\xf9\x8a\xb7\xea\x48\x97\xfb\x49\x89\x07\x09\x80\x0a\x8b\x22\x9e\x9b\x36\x97\x5f\x9b\x75\x68\x23\xdb\xa6\xc2\x10\xdc\x71\xf7\x92\x19\x05\x51\x9a\x5a\x7b\x37\x00\xa3\x72\x90\xba\xaa\xe9\x33\xb9\xa3\x2b\x23\xd8\x20\x86\x5c\x73\x8c\xcc\xac\xa0\xf3\x8d\x49\x45\x57\x63\x79\xfc\x52\x23\xc5\x1a\x66\x3a\x1d\x14\x0a\x4f\x91\x29\xb2\xbc\x13\xae\x16\x6f\x83\x78\xb1\xc0\x41\xb8\x02\x66\x85\x74\x2c\x80\xc6\x66\x7d\x81\x16\x67\x6b\x42\x1b\xb1\xf1\x5b\xf2\x95\xdd\x80\xe6\x6f\x51\xad\x63\x7d\x91\x8c\x3a\x84\x0f\xbe\xa7\x9c\xa5\x74\x12\x6e\x05\x37\x92\x69\x55\x2c\x5d\x57\xbb\xb3\x75\xfc\xa5\x8a\x68\x34\x95\x0a\x44\xbe\xe4\xd4\xb7\x07\xda\x19\x15\xe9\xb1\x0f\xce\xd4\x13\xdb\xff\x1f\xa9\xf7\x1c\x67\xf5\xe2\xa9\xf2\x15\x13\x07\x65\x16\x8b\x70\xa9\x7d\x89\x8a\x77\x19\xae\x43\xf0\xf7\x78\x15\xc2\x5b\x91\xe1\x00\x72\x9a\x30\xe0\xe3\x8b\x01\xac\x84\xd5\x03\x40\x6b\x8d\x1d\x40\x66\x25\xdf\xa9\xf9\xf7\x4e\xe7\x06\x14\xdf\x7b\x4b\x4d\xdd\xef\x5d\x3d\x73\x6b\xe7\xb1\x7c\x35\xfd\x9e\x69\xbf\x1a\xb4\xcf\x0e\xdb\x87\xc3\xe1\x90\xef\x7b\x62\x08\x0d\x26\x72\x16\xcf\xea\x72\xb9\x94\x79\x2d\x14\x34\x53\x29\x82\x7d\x74\xd8\x9c\x9c\xec\xef\x33\x9b\x3c\x69\xea\x0a\xb3\x4a\xe7\xfe\x3b\xfd\xcb\x8a\xed\x7c\xc6\x99\xed\x1c\xda\x5e\xfb\x9b\x07\x6e\x79\xa5\xa3\x9c\xd8\x0b\x26\x56\xfe\xf6\xe1\xc3\x35\x54\xd6\xcc\xa5\x42\xb0\xe4\x18\xce\xc7\x5f\x38\x35\x8f\x1f\x3e\x12\x08\x1d\x88\xf6\x2a\xd1\xe6\x0d\xa4\x0d\x42\xdd\x03\xa3\x4c\xe8\x74\xa1\x2f\xfd\x6c\x47\x78\x28\xbc\xaf\x26\x07\x07\x4d\xeb\x62\xf2\x7d\x9c\x4b\xfc\xbf\x3a\xe0\xed\x1d\x54\xf4\x0c\x0c\x79\x70\x3c\x6f\x4a\x3f\x08\xa1\x91\xd3\x93\xd1\xc9\x78\xe7\xd9\xff\x06\x00\x00\xff\xff\x0c\xaa\x3f\xc3\xbe\x36\x00\x00")

func sampleClasszzConfBytes() ([]byte, error) {
	return bindataRead(
		_sampleClasszzConf,
		"sample-classzz.conf",
	)
}

func sampleClasszzConf() (*asset, error) {
	bytes, err := sampleClasszzConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sample-classzz.conf", size: 14014, mode: os.FileMode(384), modTime: time.Unix(1559730528, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"sample-classzz.conf": sampleClasszzConf,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"sample-classzz.conf": &bintree{sampleClasszzConf, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
